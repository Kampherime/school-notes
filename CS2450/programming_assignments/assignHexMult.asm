	.orig x3000
MAIN
	JSR GETH4
	JSR GETH4
	HALT

GETHD
	ST R7, R7_ADDR1
	ST R2, R2_ADDR1
	ST R1, R1_ADDR1
	AND R0, R0, #0
	AND R1, R1, #0
LOOP
	GETC
	ADD R1, R0, #0
	; ADD R1, R0, #0
	LD R2, NLF
	ADD R1, R1, R2
	BRP LOOP
	ADD R1, R1, #5
	BRZP LHEX
	ADD R1, R1, #15
	ADD R1, R1, #12
	BRP LOOP
	ADD R1, R1, #5
	BRZP CHEX
	ADD R1, R1, #8
	BRP LOOP
	ADD R1, R1, #9
	BRZP DIGIT
	BRN LOOP
DIGIT
	OUT
	LD R2, N0
	ADD R0, R0, R2
	BRNZP LOAD
CHEX
	OUT
	LD R2, NUA
	ADD R0, R0, R2
	ADD R0, R0, #10
	BRNZP LOAD
LHEX
	OUT
	LD R2, NLF
	ADD R0, R0, R2
	ADD R0, R0, #5
	ADD R0, R0, #10
	BRNZP LOAD
LOAD
	LD R7, R7_ADDR1
	LD R2, R2_ADDR1
	LD R1, R1_ADDR1
	RET

R7_ADDR1 .fill 0 
R2_ADDR1 .fill 0
R1_ADDR1 .fill 0
N0 .fill -48
NLF .fill -102
NUA .fill -65

MULT
	AND R0, R0, #0
	ST R2, R2_ADDR2
	ST R1, R1_ADDR2
	ADD R2, R2, #0
	BRZ FIN
	ADD R1, R1, #0
	BRZ FIN
	NOT R2, R2
	ADD R2, R2, #-1
	ADD R0, R1, R2
	BRNZ R2MULT
R1MULT
	LD R2, R2_ADDR2
	AND R0, R0, #0
LOOP1
	ADD R0, R0, R1
	ADD R2, R2, #-1
	BRP LOOP1
	BRNZP FIN

R2MULT
	LD R2, R2_ADDR2
	AND R0, R0, #0
LOOP2
	ADD R0, R0, R2
	ADD R1, R1, #-1
	BRP LOOP2
FIN
	LD R2, R2_ADDR2
	LD R1, R1_ADDR2
	RET

R1_ADDR2 .fill 0
R2_ADDR2 .fill 0

GETH4
	ST R1, R1_ADDR3
	ST R2, R2_ADDR3
	ST R7, R7_ADDR3
	ST R3, R3_ADDR3

	AND R3, R3, #0
	JSR GETHD
	AND R1, R1, #0
	AND R2, R2, #0
	ADD R1, R0, R3
	ADD R2, R2, #15
	ADD R2, R2, #1
	JSR MULT
	AND R3, R3, #0
	ADD R3, R0, R3

	JSR GETHD
	AND R1, R1, #0
	AND R2, R2, #0
	ADD R1, R0, R3
	ADD R2, R2, #15
	ADD R2, R2, #1
	JSR MULT
	AND R3, R3, #0
	ADD R3, R0, R3

	JSR GETHD
	AND R1, R1, #0
	AND R2, R2, #0
	ADD R1, R0, R3
	ADD R2, R2, #15
	ADD R2, R2, #1
	JSR MULT
	AND R3, R3, #0
	ADD R3, R0, R3

	JSR GETHD
	ADD R3, R0, R3

	AND R0, R0, #0
	ADD R0, R0, #10
	OUT
	AND R0, R0, #0
	ADD R0, R3, R0
	LD R1, R1_ADDR3
	LD R2, R2_ADDR3
	LD R3, R3_ADDR3
	LD R7, R7_ADDR3
	RET

R1_ADDR3 .fill 0
R2_ADDR3 .fill 0
R3_ADDR3 .fill 0
R7_ADDR3 .fill 0

.end
